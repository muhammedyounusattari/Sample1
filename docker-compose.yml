version: '3.6'
services:
  ui:
    build:
      context: .
      dockerfile: UIDockerfile
    container_name: ui_sample1
    ports:
      - '4700:443'
    networks:
      - samplenet
    links:
      - 'api:api'
      - 'reports:reports'
  reports:
    build:
      context: .
      dockerfile: ReportsDockerfile
    container_name: reports_sample1
    ports:
      - '5556:5556'
    networks:
      - samplenet
  api:
    build:
      context: .
      dockerfile: AppDockerfile
    container_name: api_sample1
    ports:
      - '5555:5555'
    depends_on:
      - db
    networks:
      - samplenet
    links:
      - 
  db: 
    build:
      context: .
      dockerfile: DBDockerfile
    container_name: db_sample1
    volumes:
      - postgresdb:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: fastcode
      POSTGRES_DB: timesheet
    ports:
      - '5433:5432'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U postgres'
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - samplenet
networks:
  samplenet: null
volumes:
  postgresdb: {}
